package ua.org.zasadnyy.partybudget.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ua.org.zasadnyy.partybudget.dao.Transaction;
import ua.org.zasadnyy.partybudget.dao.Payer;
import ua.org.zasadnyy.partybudget.dao.Party;

import ua.org.zasadnyy.partybudget.dao.TransactionDao;
import ua.org.zasadnyy.partybudget.dao.PayerDao;
import ua.org.zasadnyy.partybudget.dao.PartyDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig transactionDaoConfig;
    private final DaoConfig payerDaoConfig;
    private final DaoConfig partyDaoConfig;

    private final TransactionDao transactionDao;
    private final PayerDao payerDao;
    private final PartyDao partyDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        transactionDaoConfig = daoConfigMap.get(TransactionDao.class).clone();
        transactionDaoConfig.initIdentityScope(type);

        payerDaoConfig = daoConfigMap.get(PayerDao.class).clone();
        payerDaoConfig.initIdentityScope(type);

        partyDaoConfig = daoConfigMap.get(PartyDao.class).clone();
        partyDaoConfig.initIdentityScope(type);

        transactionDao = new TransactionDao(transactionDaoConfig, this);
        payerDao = new PayerDao(payerDaoConfig, this);
        partyDao = new PartyDao(partyDaoConfig, this);

        registerDao(Transaction.class, transactionDao);
        registerDao(Payer.class, payerDao);
        registerDao(Party.class, partyDao);
    }
    
    public void clear() {
        transactionDaoConfig.getIdentityScope().clear();
        payerDaoConfig.getIdentityScope().clear();
        partyDaoConfig.getIdentityScope().clear();
    }

    public TransactionDao getTransactionDao() {
        return transactionDao;
    }

    public PayerDao getPayerDao() {
        return payerDao;
    }

    public PartyDao getPartyDao() {
        return partyDao;
    }

}
